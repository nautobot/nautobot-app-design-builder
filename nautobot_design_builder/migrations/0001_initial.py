# Generated by Django 3.2.25 on 2024-05-13 13:04

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import nautobot.core.celery
import nautobot.extras.models.mixins
import nautobot.extras.models.statuses
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0058_jobresult_add_time_status_idxs'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('job', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='extras.job')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            bases=(models.Model, nautobot.extras.models.mixins.DynamicGroupMixin, nautobot.extras.models.mixins.NotesMixin),
        ),
        migrations.CreateModel(
            name='DesignInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('first_implemented', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_implemented', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(blank=True, default='', max_length=20)),
                ('design', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='instances', to='nautobot_design_builder.design')),
                ('status', nautobot.extras.models.statuses.StatusField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='design_instance_statuses', to='extras.status')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Design Deployment',
                'verbose_name_plural': 'Design Deployments',
            },
            bases=(models.Model, nautobot.extras.models.mixins.DynamicGroupMixin, nautobot.extras.models.mixins.NotesMixin),
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('design_instance', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='journals', to='nautobot_design_builder.designinstance')),
                ('job_result', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.PROTECT, to='extras.jobresult')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ['-last_updated'],
            },
            bases=(models.Model, nautobot.extras.models.mixins.DynamicGroupMixin, nautobot.extras.models.mixins.NotesMixin),
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('index', models.IntegerField()),
                ('_design_object_id', models.UUIDField()),
                ('changes', models.JSONField(blank=True, editable=False, encoder=nautobot.core.celery.NautobotKombuJSONEncoder, null=True)),
                ('full_control', models.BooleanField(editable=False)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('_design_object_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='nautobot_design_builder.journal')),
            ],
            options={
                'unique_together': {('journal', 'index')},
            },
        ),
        migrations.AddConstraint(
            model_name='designinstance',
            constraint=models.UniqueConstraint(fields=('design', 'name'), name='unique_design_instances'),
        ),
        migrations.AlterUniqueTogether(
            name='designinstance',
            unique_together={('design', 'name')},
        ),
        migrations.AddConstraint(
            model_name='design',
            constraint=models.UniqueConstraint(fields=('job',), name='unique_designs'),
        ),
    ]
